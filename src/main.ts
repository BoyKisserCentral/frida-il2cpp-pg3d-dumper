import "frida-il2cpp-bridge";
import * as fs from 'fs';

declare global {
    var IL2CPP_EXPORTS: Record<string, () => NativePointer>;
}

const patterns = {
    il2cpp_array_class_get:             "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B8 20 00 00 00",
    il2cpp_array_length:                "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B8 20 00 00 00",
    //il2cpp_assembly_get_image:          "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B2 01",
    il2cpp_class_array_element_size:    "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B2 01",
    il2cpp_class_enum_basetype:         "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B2 01",
    il2cpp_class_from_il2cpp_type:      "B2 01 E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC E9",
    il2cpp_class_from_name:             "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 83 EC 28 4C 8D 44 24 40",
    il2cpp_class_from_type:             "B2 01 E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC E9",
    il2cpp_class_get_assemblyname:      "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 83 EC 28 4C 8D 44 24 40",
    il2cpp_class_get_field_from_name
    il2cpp_class_get_fields
    //il2cpp_class_get_image:             "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B2 01",
    il2cpp_class_get_interfaces:        "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_class_get_method_from_name:  "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_class_get_methods:           "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_class_get_name:              "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6",
    il2cpp_class_get_namespace:         "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_class_get_nested_types:      "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_class_get_parent:            "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_class_get_static_field_data: "48 8B 81 B8 00 00 00 C3 CC CC CC CC CC CC CC",
    //il2cpp_class_get_type:              "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC 40 53 48 83 EC 20 48 8B C2",
    il2cpp_class_instance_size
    il2cpp_class_is_enum:               "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 89 91 D0 00 00 00",
    il2cpp_class_is_inflated:           "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 89 91 D0 00 00 00",
    il2cpp_class_is_interface:          "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 89 91 D0 00 00 00",
    //il2cpp_class_is_valuetype:          "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 89 91 D0 00 00 00",
    //il2cpp_class_value_size:            "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 83 EC 28 E8 ?? ?? ?? ?? 48 8B 48 08",
    il2cpp_domain_assembly_open:        "48 8B CA E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC E9",
    //il2cpp_domain_get:                  "48 83 EC 28 48 8B 05 ?? ?? ?? ?? 48 85 C0 75 11",
    il2cpp_domain_get_assemblies:       "40 53 48 83 EC 20 48 8B DA E8 ?? ?? ?? ?? 48 8B 48 08",
    il2cpp_field_get_flags:             "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 8B 41 08",
    //il2cpp_field_get_name:              "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B2 01",
    il2cpp_field_get_offset:            "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 8B 41 08",
    il2cpp_field_get_parent:            "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_field_get_type:              "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 8B 41 08",
    il2cpp_field_static_get_value:      "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 40",
    il2cpp_field_static_set_value:      "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 89 5C 24 ?? 57 48 83 EC 40 49 63 D8",
    il2cpp_image_get_assembly:          "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_method_get_class:            "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    il2cpp_method_get_flags:            "48 89 5C 24 ?? 57 48 83 EC 20 48 8B DA 48 8B F9 48 85 D2 74 07",
    //il2cpp_method_get_name:             "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 0F B6 81",
    //il2cpp_method_get_param
    //il2cpp_method_get_param_count
    //il2cpp_method_get_param_name
    //il2cpp_method_get_return_type
    //il2cpp_method_is_inflated
    //il2cpp_method_is_instance
    //il2cpp_object_get_class:            "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B2 01",
    //il2cpp_object_new:                  "E8 ?? ?? ?? ?? 48 8B D3 48 8B C8 48 8B F8 E8 ?? ?? ?? ?? 4D 63 C7",
    il2cpp_object_unbox:                "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC B8 18 00 00 00",
    //il2cpp_resolve_icall:               "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 8B 41 18 4C 8B D2",
    //il2cpp_runtime_class_init:          "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 48 8B 41 18 4C 8B D2",
    il2cpp_string_chars
    il2cpp_string_length
    il2cpp_string_new_wrapper
    il2cpp_type_get_name:               "40 53 48 83 EC 40 45 33 C0",
    il2cpp_type_get_type:               "E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC 8B 41 08"
};

function scanPattern(pattern: string): NativePointer | null {
    try {
        const result = Memory.scanSync(Il2Cpp.module.base, Il2Cpp.module.size, pattern);
        if (result.length === 0) {
            console.warn(`Pattern not found: ${pattern}`);
            return null;
        }
        return result[0].address;
    } catch (error) {
        console.error(`Error scanning pattern: ${pattern}`, error);
        return null;
    }
}

globalThis.IL2CPP_EXPORTS = Object.fromEntries(
    Object.entries(patterns).reduce<[string, () => NativePointer][]>((acc, [name, pattern]) => {
        const address = scanPattern(pattern);
        if (address !== null) {
            acc.push([name, () => address]);
        }
        return acc;
    }, [])
);

function clean_from_sys(str: string) {
    return str.replaceAll(",", ", ").replaceAll("System.", "");
}

function intermediary(): void {
    Il2Cpp.perform(() => {
        let out_arr: string[] = []
        console.log("Performing custom Il2Cpp.dump()");
        Il2Cpp.domain.assemblies.forEach((assembly) => {
            console.log(`Dumping ${assembly.name}.dll`);
            assembly.image.classes.forEach((c) => {
                let has_valid_parent = c.parent && c.parent.name != "Object" && c.parent.name != "Enum" && c.parent.name != "ValueType";
                let output_string = "";
                let interface_construct = "";
                let iface_count = 0;
                c.interfaces.forEach((i) => {
                    interface_construct += i.name;
                    if (iface_count < c.interfaces.length - 1) {
                        interface_construct += ", ";
                    }
                    iface_count++;
                });
                output_string += `// Dll : ${assembly.name}.dll\n// Namespace: ${c.namespace}\n`;
                output_string += `${c.isBlittable ? (c.isEnum ? "internal " : "private ") : ""}${c.isAbstract ? "abstract " : ""}${(c.isEnum ? "enum " : (c.isStruct ? "struct " : (c.isInterface ? "interface " : "class ")))}${c.name}${has_valid_parent ? ` : ${c.parent?.name}` : ""}${iface_count != 0 ? `${has_valid_parent ? ", " : " : "}${interface_construct}` : ""}\n{\n`;
                output_string += "    // Fields\n"
                c.fields.forEach((f) => {
                    output_string += `    ${f.modifier ? f.modifier + " " : ""}${f.isLiteral ? "const " : (f.isStatic ? "static " : "")}${clean_from_sys(f.type.class.name)} ${f.name}${f.isLiteral ? ` = ${f.value.toString().replace("\"\"\"", "\"\\\"\"")}` : ""}; // ${f.offset == 0 ? "0x0" : `0x${f.offset.toString(16)}`}\n`;
                });
                output_string += "\n"
                output_string += "    // Properties (Currently Unavailable)\n\n"
                output_string += "    // Methods\n";
                c.methods.forEach((m) => {
                    let param_construct = "";
                    let param_count = 0;
                    m.parameters.forEach((p) => {
                        param_construct += `${p.type.class.name} ${p.name}`;
                        if (param_count < m.parameters.length - 1) {
                            param_construct += ", ";
                        }
                        param_count++;
                    });
                    output_string += `    // RVA: ${m.virtualAddress.equals(0) ? "0x0" : m.relativeVirtualAddress} VA: ${m.virtualAddress}\n`;
                    output_string += `    ${m.modifier ? m.modifier + " " : ""}${m.isStatic ? "static " : ""}${clean_from_sys(m.returnType.class.name)} ${m.name}(${param_construct}) { }\n`;
                });
                out_arr.push(output_string + "}\n\n");
            })
        });
        console.log("Writing dump output...");
        fs.writeFileSync('./frida_dump.cs', out_arr.join(""));
        console.log("Dump completed! (Saved to Steam game folder)");
    });
}

setTimeout(intermediary, 0);